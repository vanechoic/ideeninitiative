package {{package}};


{{#imports}}import {{import}};
{{/imports}}

{{#java8}}
import org.springframework.http.HttpStatus;
{{/java8}}
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.*;
import org.springframework.validation.annotation.Validated;
import javax.validation.Valid;
import javax.validation.constraints.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
{{#async}}
import java.util.concurrent.{{^java8}}Callable{{/java8}}{{#java8}}CompletableFuture{{/java8}};
{{/async}}

@Validated
@Api(value = "{{classname}}")
{{#operations}}
public interface {{classname}} {
{{#operation}}

      /**
      * {{notes}}
      */
      @ApiOperation(value = "{{notes}}", nickname = "{{operationId}}", notes = "", tags={ {{#tags}}"{{name}}"{{^-last}}, {{/-last}}{{/tags}} })
      @ApiResponses(value = {
      {{#responses}} @ApiResponse(code = {{code}}, message = "{{message}}"){{^-last}}, {{/-last}}{{/responses}}
      })
      @RequestMapping(value = "{{path}}",
      method = RequestMethod.{{httpMethod}})
      {{#java8}}public {{/java8}}{{#async}}{{^java8}}Callable{{/java8}}{{#java8}}CompletableFuture<{{/java8}}{{/async}}ResponseEntity<{{>returnTypes}}>{{#async}}>{{/async}} {{operationId}}({{#allParams}}{{>queryParams}}{{>pathParams}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{#hasMore}},{{/hasMore}}{{/allParams}}) throws Exception;{{#java8}} {{/java8}}

{{/operation}}
}
{{/operations}}
