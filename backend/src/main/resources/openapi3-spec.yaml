openapi: 3.0.0
info:
  description: "This is a sample server Petstore server.  You can find out more
    about     Swagger at [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample,
    you can use the api key `special-key` to test the
    authorization     filters."
  version: 1.0.0
  title: Ideeninitiative
tags:
  - name: benutzer
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
paths:
  /idee:
    get:
      tags:
        - idee
      summary: Alle Ideen abrufen
      operationId: alleIdeenAbrufen
      responses:
        "200":
          description: erfolgreich
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdeeDTO'
        "500":
          description: Es gab einen unerwarteten internen Server-Fehler.
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
        - idee
      summary: Neue Idee anlegen
      operationId: neueIdeeAnlegen
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/IdeeDTO"
        description: Neu angelegte Idee
        required: true
      responses:
        "200":
          description: erfolgreich
          content:
            application/json; charset=utf-8:
              schema:
                type: string
        "400":
          description: Fehlende Eingabe
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/ApiFehler"
    put:
      tags:
        - idee
      summary: Idee bearbeiten
      operationId: ideeBearbeiten
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/IdeeDTO"
        description: Zu aktualisierende Idee
        required: true
      responses:
        "200":
          description: erfolgreich
          content:
            application/json; charset=utf-8:
              schema:
                type: string
        "400":
          description: Fehlerhafte Eingabe
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/ApiFehler"
  /idee/loeschen:
    post:
      tags:
        - idee
      summary: Löschen einer Idee
      operationId: ideeLoeschen
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/IdeeDTO"
        description: Zu loeschende Idee
        required: true
      responses:
        "200":
          description: Idee erfolgreich gelöscht.
          content:
            application/json; charset=utf-8:
              schema:
                type: string
        "400":
          description: Fehlerhafte Eingabe
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/ApiFehler"
  /idee/veroeffentlichen:
    post:
      tags:
        - idee
      summary: Veröffentlichen einer Idee
      operationId: ideeVeroeffentlichen
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/IdeeDTO"
        description: Zu loeschende Idee
        required: true
      responses:
        "200":
          description: Idee erfolgreich veröffentlicht.
          content:
            application/json; charset=utf-8:
              schema:
                type: string
        "400":
          description: Fehlerhafte Eingabe
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/ApiFehler"
  /idee/meineideen:
    get:
      tags:
        - idee
      summary: Benutzerspezifische Ideen abrufen
      operationId: meineIdeen
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        "200":
          description: erfolgreich
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdeeDTO'
        "500":
          description: Es gab einen unerwarteten internen Server-Fehler.
          content:
            application/json:
              schema:
                type: string
        "403":
          description: Nicht autorisiert. Sind Sie angemeldet?
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiFehler"
  /idee/zugewiesene:
    get:
      tags:
        - idee
      summary: Dem Fachspezialisten zugeordnete Ideen zur Bearbeitung laden
      operationId: meineZugewiesenenIdeenAbrufen
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        "200":
          description: erfolgreich
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdeeDTO'
        "500":
          description: Es gab einen unerwarteten internen Server-Fehler.
          content:
            application/json:
              schema:
                type: string
        "403":
          description: Nicht autorisiert. Sind Sie angemeldet?
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiFehler"
  /idee/ideenspeicher:
    get:
      tags:
        - idee
      summary: Den Ideenspeicher des Fachspezialisten laden
      operationId: meinenIdeenspeicherLaden
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        "200":
          description: erfolgreich
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdeeDTO'
        "500":
          description: Es gab einen unerwarteten internen Server-Fehler.
          content:
            application/json:
              schema:
                type: string
        "403":
          description: Nicht autorisiert. Sind Sie angemeldet?
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiFehler"
  /benutzer:
    get:
      tags:
        - benutzer
      summary: Der Admin lädt eine Liste aller Benutzer.
      operationId: alleBenutzerLaden
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        "200":
          description: erfolgreich
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenutzerDTO'
        "500":
          description: Es gab einen unerwarteten internen Server-Fehler.
          content:
            application/json:
              schema:
                type: string
        "403":
          description: Nicht autorisiert. Sind Sie angemeldet?
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiFehler"
    post:
      tags:
        - benutzer
      summary: Benutzer registrieren
      description: This can only be done by the logged in user.
      operationId: benutzerRegistrieren
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BenutzerDTO"
        description: Created user object
        required: true
      responses:
        "200":
          description: erfolgreich
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Fehlende Eingabe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiFehler"
    put:
      tags:
        - benutzer
      summary: Die Mitarbeiterdaten (z.B. Rolle und Spezialisierungen) werden aktualisiert.
      operationId: mitarbeiterAktualisieren
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/BenutzerDTO"
        description: Zu aktualisierender Benutzer
        required: true
      responses:
        "200":
          description: erfolgreich
          content:
            application/json; charset=utf-8:
              schema:
                type: string
        "400":
          description: Fehlerhafte Eingabe
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/ApiFehler"
  /benutzer/login:
    post:
      tags:
        - benutzer
      summary: Logs user into the system
      description: ""
      operationId: benutzerAnmelden
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - userName
              properties:
                benutzername:
                  type: string
                  pattern: '^[\wäüöÄÜÖß]+$'
                  minLength: 1
                passwort:
                  type: string
                  minLength: 8
        description: Der Benutzername des einzuloggenden Benutzers
        required: true
      responses:
        "200":
          description: erfolgreich
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Ungültige Benutzerdaten
  /benutzer/logout:
    get:
      tags:
        - benutzer
      summary: Meldet den aktuellen Benutzer ab
      description: ""
      operationId: benutzerAbmelden
      responses:
        default:
          description: erfolgreich
  /systemnachricht:
    get:
      tags:
        - systemnachricht
      summary: Der Admin lädt eine Liste aller eingereichten Systemnachrichten.
      operationId: alleSystemnachrichtenLaden
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        "200":
          description: erfolgreich
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemnachrichtDTO'
        "500":
          description: Es gab einen unerwarteten internen Server-Fehler.
          content:
            application/json:
              schema:
                type: string
        "403":
          description: Nicht autorisiert. Sind Sie als Admin angemeldet?
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiFehler"
    post:
      tags:
        - systemnachricht
      summary: Systemnachricht anlegen
      operationId: systemnachrichtAnlegen
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/SystemnachrichtDTO"
        description: Neue Systemnachricht anlegen
        required: true
      responses:
        "200":
          description: erfolgreich
          content:
            application/json; charset=utf-8:
              schema:
                type: string
        "400":
          description: Fehlende Eingabe
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/ApiFehler"
  /systemnachricht/loeschen:
    post:
      tags:
        - systemnachricht
      summary: Systemnachricht loeschen
      operationId: systemnachrichtLoeschen
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/SystemnachrichtDTO"
        description: Systemnachricht loeschen
        required: true
      responses:
        "200":
          description: erfolgreich
          content:
            application/json; charset=utf-8:
              schema:
                type: string
        "400":
          description: Fehlende Eingabe
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/ApiFehler"
servers:
  - url: /v2
components:
  schemas:
    SystemnachrichtDTO:
      type: object
      required:
        - titel
        - beschreibung
      properties:
        titel:
          type: string
          pattern: '^[^\^°=*#~,;:(){}§$%<>|''`´\/\\]*$'
          minLength: 1
        beschreibung:
          type: string
          pattern: '^[^\^°=*#~;(){}§$%<>|''`´\/\\]*$'
          minLength: 1
    BenutzerDTO:
      type: object
      required:
        - benutzername
        - vorname
        - nachname
        - email
      properties:
        benutzername:
          type: string
          pattern: '^[\wäüöÄÜÖß]+$'
          minLength: 1
        vorname:
          type: string
          pattern: '^[^\^°=*#~,;:(){}§$%<>|''`´\/\\]*$'
          minLength: 1
        nachname:
          type: string
          pattern: '^[^\^°=*#~,;:(){}§$%<>|''`´\/\\]*$'
          minLength: 1
        email:
          type: string
          pattern:  '^[\w.@-]+$'
          minLength: 6
        passwort:
          type: string
          minLength: 8
        fachspezialistVertriebswege:
          type: array
          items:
            type: string
        fachspezialistHandlungsfelder:
          type: array
          items:
            type: string
        fachspezialistSparten:
          type: array
          items:
            type: string
        fachspezialistZielgruppen:
          type: array
          items:
            type: string
        istFachspezialist:
          type: boolean
        istAdmin:
          type: boolean
      xml:
        name: Mitarbeiter
    IdeeDTO:
      properties:
        bearbeitungsstatus:
          type: string
        begruendung:
          type: string
        beschreibung:
          type: string
        titel:
          type: string
          pattern: '^[^\^°=*#~,;:(){}§$%<>|''`´\/\\]*$'
        typ:
          type: string
        erfasser:
          type: string
          pattern: '^[\wäüöÄÜÖß]+$'
        fachspezialist:
          type: string
          pattern: '^[\wäüöÄÜÖß]+$'
        existiertBereits:
          type: boolean
        unternehmensbezeichnung:
          type: string
          pattern: '^[^\^°=*#~,;:(){}§$%<>|''`´\/\\]*$'
        artDerUmsetzung:
          type: string
          pattern: '^[^\^°=*#~;:(){}§$%<>|''`´\/\\]*$'
        sparten:
          type: string
        vertriebsweg:
          type: array
          items:
            type: string
        zielgruppe:
          type: array
          items:
            type: string
        vorteile:
          type: array
          items:
            type: string
            pattern: '^[^\^°=*#~;:(){}§$%<>|''`´\/\\]*$'
        handlungsfeld:
          type: string
        erstellzeitpunkt:
          type: string
          pattern: '^\s*(3[01]|[12][0-9]|0?[1-9])\.(1[012]|0?[1-9])\.((?:19|20)\d{2})\s([01][0-9]|2[0-3]):([012345][0-9]):([012345][0-9])$'
    ApiFehler:
      type: object
      properties:
        httpStatusCode:
          type: integer
          format: int32
        fehlertyp:
          type: string
        fehlertext:
          type: string